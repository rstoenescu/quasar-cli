#!/usr/bin/env node

const
  fs = require('fs'),
  parseArgs = require('minimist'),
  chalk = require('chalk'),
  spawn = require('../lib/helpers/spawn'),
  log = require('../lib/helpers/logger')('app:mode'),
  appPaths = require('../lib/build/app-paths'),
  logger = require('../lib/helpers/logger'),
  warn = logger('app:mode-test', 'red')
  webpack = require('webpack')
  if (!fs.existsSync(appPaths.testDir)) {
  warn(`
  Code coverage and testing not setup. Please run:
   
    $ quasar mode --add test 
    
    `)
  return
}

const argv = parseArgs(process.argv.slice(2), {
  alias: {
    h: 'help',
    c: 'cover'
  },
  string: ['a', 'r'],
  boolean: ['h', 'c', 'u']
})

// const unitTests = ['cross-env NODE_ENV=test', 'mocha-webpack', '--webpack-config', 'test/webpack.test.js', '--require', 'test/setup.js', 'test/**/*.spec.js']
// const coverageTests = ['cross-env NODE_ENV=test nyc --reporter=lcov mocha-webpack --webpack-config test/webpack.config-test.js --require test/setup.js test/**/*.spec.js']
// "test": "cross-env NODE_ENV=test nyc --reporter=lcov --reporter=text mocha test/*.js"

if (argv.help) {
  // these options are taken from https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-unit-mocha
  console.log(`
    Description
      This runs code coverage on the whole app.

     Options     
      --cover, -c     Run code coverage       
      --help, -h     Displays this message

    Usage
      # run all unit tests currently installed and watch for changes
      $ quasar test 

      # run code coverage currently installed
      $ quasar test --coverage

  `)
  process.exit(0)
}

//      log(`Run "quasar test -t -unit" to see watched unit testing.`)
//      log(`Run "quasar test -t -cover" to see code coverage.`)

require('../lib/helpers/ensure-argv')(argv, 'mode')
const getMode = require('../lib/mode')

if (argv.cover) {
 log(`Starting Coverage`)
 spawn.sync('./node_modules/cross-env/dist/bin/cross-env.js',
  ['NODE_ENV=test', './node_modules/nyc/bin/nyc.js', 'report', './node_modules/mocha/bin/mocha'])
} else {
  log(`Starting Unit Tests`)
  spawn.sync('./node_modules/cross-env/dist/bin/cross-env.js',
    ['NODE_ENV=test', './node_modules/mocha-webpack/bin/mocha-webpack'])
}

if (argv.add) {
  getMode(argv.add).add()
  process.exit(0)
}
else if (argv.remove) {
  getMode(argv.remove).remove()
  process.exit(0)
}
